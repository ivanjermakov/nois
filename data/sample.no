// commment

// numbers
1
12.5
1e21

// strings
""
''
"a"
"a\nb"
'a'
'a\\\b\f\n\r\tb'
'a\u1234bc'
'hey ðŸ˜Ž'

// lists
[]
[ ]
[,]
[1,]
[1, 2, 3]
[1, 2, 'abc']
[1, 2, 'abc',]
[
    1,
    2,
    'abc',
]

// struct_defines
#{a, b, c}
#{
    a,
    b,
    c
}

// enum_defines
|{A, B, C}
|{
    A,
    B,
    C
}

// todo
(a, b) { a + b }
(a, b) {
    c = a + b
    c
}
() {42}
-> 42
(a, b) -> a + b
a -> a + 12
[a, b, ..t] -> [a, b]

fizBuzz = () {
    mapToWord = i -> match [i % 3 == 0, i % 5 == 0] {
        [true, true] -> "FizzBuzz",
        [true, _   ] -> "Fizz",
        [_   , true] -> "Buzz",
        _ -> i ~ [C]
    }
    range(0, 100)
        .map(+)
        .map(mapToWord)
        .join()
}

fizBuzzShort = ->
    range(0, 100)
        .map(+)
        .map(i -> match [i % 3 == 0, i % 5 == 0] {
            [true, true] -> "FizzBuzz",
            [true, _   ] -> "Fizz",
            [_   , true] -> "Buzz",
            _ -> i ~ [C]
        })
        .join()


User = #{id, name, age}
user = User(12, 'Jack', 34)

UserRole = |{Admin, Guest}

dropDatabase = (user, role) ->
    match role {
        Admin -> drop(),
        Guest -> panic('no access'),
    }

helloWorld = -> println('Hello, World!')

helloWorldEarly = () {println('Hello, World!')}
